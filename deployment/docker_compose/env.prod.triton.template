# Fill in the values and copy the contents of this file to .env in the deployment directory.
# Some valid default values are provided where applicable, delete the variables which you don't set values for.
# This is only necessary when using the docker-compose.prod.yml compose file.


# Could be something like danswer.companyname.com
WEB_DOMAIN=http://localhost:3000

# Start of Triton Config -----

# Generative AI settings, uncomment as needed, will work with defaults
GEN_AI_MODEL_PROVIDER=triton
GEN_AI_MODEL_VERSION= #Name of the model in the Triton server.
# Set to use Azure OpenAI or other services, such as https://danswer.openai.azure.com/
GEN_AI_API_ENDPOINT= #The Triton Server endpoint with the port (e.g. http://my-triton-server:8000 for HTTP or my-triton-server:8001 for gRPC)
GEN_AI_TRITON_PROTOCOL=rest #Triton Communication Protocol (grpc or rest)

# Let's also make some changes to accommodate the weaker locally hosted LLM
QA_TIMEOUT=300  # Set a longer timeout, running models on CPU can be slow
DISABLE_LLM_FILTER_EXTRACTION=True
DISABLE_LLM_CHUNK_FILTER=True

# End of Triton Config -----

# Provide this as a global default/backup, this can also be set via the UI
#GEN_AI_API_KEY= #Triton class currently does not support api_key.
# Set up to use a specific API version, such as 2023-09-15-preview (example taken from Azure)
#GEN_AI_API_VERSION=


# If you want to setup a slack bot to answer questions automatically in Slack 
# channels it is added to, you must specify the two below.
# More information in the guide here: https://docs.danswer.dev/slack_bot_setup
#DANSWER_BOT_SLACK_APP_TOKEN=
#DANSWER_BOT_SLACK_BOT_TOKEN=


# The following are for configuring User Authentication, supported flows are:
# disabled
# basic (standard username / password)
# google_oauth (login with google/gmail account)
# oidc (only in Danswer enterprise edition)
# saml (only in Danswer enterprise edition)
AUTH_TYPE=basic

# Set the values below to use with Google OAuth
GOOGLE_OAUTH_CLIENT_ID=
GOOGLE_OAUTH_CLIENT_SECRET=
SECRET=

# if using basic auth and you want to require email verification, 
# then uncomment / set the following
#REQUIRE_EMAIL_VERIFICATION=true
#SMTP_USER=your-email@company.com
#SMTP_PASS=your-gmail-password

# The below are only needed if you aren't using gmail as your SMTP
#SMTP_SERVER=  
#SMTP_PORT=

# OpenID Connect (OIDC)
#OPENID_CONFIG_URL=

# SAML config directory for OneLogin compatible setups
#SAML_CONF_DIR=


# How long before user needs to reauthenticate, default to 1 day. (cookie expiration time)
SESSION_EXPIRE_TIME_SECONDS=86400


# Use the below to specify a list of allowed user domains, only checked if user Auth is turned on
# e.g. `VALID_EMAIL_DOMAINS=example.com,example.org` will only allow users
# with an @example.com or an @example.org email
VALID_EMAIL_DOMAINS=


# Default values here are what Postgres uses by default, feel free to change.
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
